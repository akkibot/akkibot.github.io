{"version":3,"sources":["component/Result.jsx","component/Akki.jsx","component/NavBar.jsx","App.js","serviceWorker.js","index.js"],"names":["randomNumber","min","max","Math","random","color","colorSelection","index","parseInt","Result","calculateResult","props","rawData","amount","days","mateWater","minLength","maxLength","minWidth","maxWidth","minHeight","maxHeight","constants","perDayWage","rate","round","renderBody","push","className","mateVal","mwQuantity","console","log","excavation","waterVal","quantity","parseFloat","toFixed","resultsTotal","sum","count","length","width","height","result","oldSum","String","remainderVal","this","Component","AKKI","componentDidMount","M","AutoInit","handleSubmit","e","preventDefault","setState","showResult","handleChange","target","name","value","handleRadio","state","onSubmit","placeholder","id","type","onChange","htmlFor","checked","NavBar","class","href","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"mPAEA,SAASA,EAAaC,EAAKC,GACvB,OAAOC,KAAKC,UAAYF,EAAMD,GAAOA,EAGzC,IAAMI,EAAO,CAAC,iBAAkB,mBAEhC,SAASC,EAAeC,GACpB,OAAGA,GAAO,GAAKA,GAAO,EACX,iBAEDC,UAAUD,EAAQ,GAAG,GACxB,GAAK,EACAF,EAAM,GAEPA,EAAM,G,IAGAI,E,4MACnBC,gBAAkB,WAAO,IAAD,EAWlB,EAAKC,MAAMC,QATbC,EAFoB,EAEpBA,OACAC,EAHoB,EAGpBA,KACAC,EAJoB,EAIpBA,UACAC,EALoB,EAKpBA,UACAC,EANoB,EAMpBA,UACAC,EAPoB,EAOpBA,SACAC,EARoB,EAQpBA,SACAC,EAToB,EASpBA,UACAC,EAVoB,EAUpBA,UAGEC,EAAY,CACZC,WAAY,IACZC,KAAM,QAGVF,EAAS,WAAiBnB,KAAKsB,MAAMZ,GAAQC,EAAOQ,EAAUC,WAAa,KAE3E,IAAIG,EAAa,GACjBA,EAAWC,KACP,yBAAKC,UAAU,iDACX,yBAAKA,UAAU,iBAAf,MACA,yBAAKA,UAAU,iBAAf,UACA,yBAAKA,UAAU,iBAAf,SACA,yBAAKA,UAAU,iBAAf,UACA,yBAAKA,UAAU,iBAAf,UACA,yBAAKA,UAAU,iBAAf,gBAIR,IAAIC,EAAU1B,KAAKsB,MAAMH,EAAUQ,WAAaR,EAAUC,WAAaT,GAEvEiB,QAAQC,IAAI,UAAWH,GAEvB,IAGII,EAHAC,EAAWL,EACfE,QAAQC,IAAI,WAAYE,GAGP,SAAdnB,GACCkB,EAAapB,EAAS,EAAIgB,EAC1BE,QAAQC,IAAI,aAAcC,KAE1BA,EAAapB,EACbkB,QAAQC,IAAI,aAAcC,IAG9B,IAAIE,EAAWC,WAAWH,EAAaX,EAAUE,MAAMa,QAAQ,GAC/DN,QAAQC,IAAI,WAAYG,GAIxB,IAFA,IAAIG,EAAe,EACfC,EAAM,EAAGC,EAAQ,EACdD,GAAOJ,GAAU,CACtB,IAAIM,EAASzC,EAAagB,EAAWC,GAAWoB,QAAQ,GACpDK,EAAQ1C,EAAakB,EAAUC,GAAUkB,QAAQ,GACjDM,EAAS3C,EAAaoB,EAAWC,GAAWgB,QAAQ,GACpDO,EAASR,WAAWK,EAASC,EAAQC,GAAQN,QAAQ,GAErDQ,EAASN,EAKb,GAJAA,GAFAK,EAASR,WAAWQ,IAGpBL,EAAMH,WAAWA,WAAWG,GAAKF,QAAQ,MAG9BF,EAEPT,EAAWC,KACT,yBAAKC,UAAS,+BAA0BtB,EAAekC,KACnD,yBAAKZ,UAAU,iBAAf,KACA,yBAAKA,UAAU,iBAAiBkB,OAAOL,IACvC,yBAAKb,UAAU,iBAAiBkB,OAAOJ,IACvC,yBAAKd,UAAU,iBAAiBkB,OAAOH,IACvC,yBAAKf,UAAU,iBAAiBkB,OAAOF,IACvC,yBAAKhB,UAAU,iBAAiBkB,OAAOP,MAG/CR,QAAQC,IACN,OACES,EACA,MACAC,EACA,MACAC,EACA,MACAC,EACA,QACAL,GAEJD,GAAgBF,WAAWQ,OACtB,CACL,IAAIG,EAAeZ,EAAWU,EAK9BH,GAJAK,EAAeX,WAAWA,WAAWW,GAAcV,QAAQ,OAC3DI,EAASzC,EAAagB,EAAWC,GAAWoB,QAAQ,KACpDM,EAAS3C,EAAaoB,EAAWC,GAAWgB,QAAQ,KAIpDO,EAASR,WAAWK,EAASC,EAAQC,GAErCZ,QAAQC,IAAI,eAAgBe,GAC5BrB,EAAWC,KACP,yBAAKC,UAAS,+BAA0BtB,EAAekC,KACnD,yBAAKZ,UAAU,iBAAf,KACA,yBAAKA,UAAU,iBAAiBkB,OAAOL,IACvC,yBAAKb,UAAU,iBAAiBkB,OAAOJ,EAAML,QAAQ,KACrD,yBAAKT,UAAU,iBAAiBkB,OAAOH,IACvC,yBAAKf,UAAU,iBAAiBkB,OAAOF,EAAOP,QAAQ,KACtD,yBAAKT,UAAU,iBAAiBkB,OAAOX,MAG/CJ,QAAQC,IACN,OACES,EACA,MACAC,EAAML,QAAQ,GACd,MACAM,EACA,MACAC,EAAOP,QAAQ,GACf,QACAF,GAEJG,GAAgBF,WAAWQ,GAE7BJ,GAAS,EAsDX,OAnDAd,EAAWC,KACP,yBAAKC,UAAU,sCACX,yBAAKA,UAAU,iBAAf,kBACA,yBAAKA,UAAU,iBAAiBkB,OAAOR,EAAaD,QAAQ,KAC5D,yBAAKT,UAAU,iBAAiBkB,OAAOR,EAAaD,QAAQ,OAGpEX,EAAWC,KACP,yBAAKC,UAAU,sCACX,yBAAKA,UAAU,iBAAf,SACA,yBAAKA,UAAU,iBAAiBN,EAAUE,QAGlDE,EAAWC,KACP,yBAAKC,UAAU,sCACX,yBAAKA,UAAU,iBAAf,qBACA,yBAAKA,UAAU,iBAAiBK,KAG3B,SAAblB,GAAuBW,EAAWC,KAC9B,yBAAKC,UAAU,wCACX,yBAAKA,UAAU,iBAAf,eACA,yBAAKA,UAAU,iBAAiBC,KAG3B,SAAbd,GAAuBW,EAAWC,KAC9B,yBAAKC,UAAU,wCACX,yBAAKA,UAAU,iBAAf,gBACA,yBAAKA,UAAU,iBAAiBC,KAIxCH,EAAWC,KACP,kBAAC,WAAD,KACA,yBAAKC,UAAU,yBACf,yBAAKA,UAAU,yCACX,yBAAKA,UAAU,iBAAf,gBACA,yBAAKA,UAAU,iBAAiBK,EAAY,EAAEJ,MAItDH,EAAWC,KACP,kBAAC,WAAD,KACA,yBAAKC,UAAU,yBACf,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,iBAAf,oBACA,yBAAKA,UAAU,iBAAiBY,MAMpC,6BACKd,I,uDAMT,OACI,6BACKsB,KAAKtC,uB,GA7LkBuC,aCffC,E,kDACnB,aAAe,IAAD,8BACZ,gBAcFC,kBAAoB,WAClBC,IAAEC,YAhBU,EAmBdC,aAAe,SAACC,GACdA,EAAEC,iBACF,EAAKC,SAAS,CACZC,YAAY,KAtBF,EA0BdC,aAAe,SAACJ,GACd,EAAKE,SAAL,eACGF,EAAEK,OAAOC,KAAOzB,WAAWmB,EAAEK,OAAOE,UA5B3B,EAgCdC,YAAc,SAACR,GACb,EAAKE,SAAS,CACZ1C,UAAWwC,EAAEK,OAAOE,SAhCtB,EAAKE,MAAQ,CACXnD,OAAS,IACTC,KAAM,EACNC,UAAW,OACXC,UAAW,GACXC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,UAAW,IACXqC,YAAY,GAZF,E,qDAuCZ,OACE,yBAAK9B,UAAU,QACb,yBAAKA,UAAU,yBACb,0BAAMA,UAAU,UAAUqC,SAAUjB,KAAKM,cACvC,yBAAK1B,UAAU,uBACb,2BACEsC,YAAY,SACZC,GAAG,SACHN,KAAK,SACLO,KAAK,SACLN,MAAOd,KAAKgB,MAAMnD,OAClBwD,SAAUrB,KAAKW,aACf/B,UAAU,aAEZ,2BAAOA,UAAU,SAAS0C,QAAQ,UAAlC,WAGF,yBAAK1C,UAAU,eACb,gEAEF,yBAAKA,UAAU,sBACb,8BACE,+BACE,2BAAOiC,KAAK,SAASjC,UAAU,WAAWwC,KAAK,QAAQN,OAAO,EAAMO,SAAUrB,KAAKe,YAAaQ,QAAkC,SAAzBvB,KAAKgB,MAAMjD,YACpH,uCAGJ,8BACE,+BACE,2BAAO8C,KAAK,SAASjC,UAAU,WAAWwC,KAAK,QAAQN,OAAO,EAAOO,SAAUrB,KAAKe,YAAaQ,QAAkC,UAAzBvB,KAAKgB,MAAMjD,YACrH,uCAKkB,SAAvBiC,KAAKgB,MAAMjD,UACV,yBAAKa,UAAU,uBACb,2BACEsC,YAAY,aACZC,GAAG,OACHN,KAAK,OACLO,KAAK,SACLN,MAAOd,KAAKgB,MAAMlD,KAClBuD,SAAUrB,KAAKW,aACf/B,UAAU,WACV3B,IAAK,IAEP,2BAAO2B,UAAU,SAAS0C,QAAQ,QAAlC,eAEF,KAEF,yBAAK1C,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,gBACb,4CAEF,yBAAKA,UAAU,UAAf,UACA,yBAAKA,UAAU,UAAf,SACA,yBAAKA,UAAU,UAAf,WAGF,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,2BACEsC,YAAY,aACZC,GAAG,YACHN,KAAK,YACLO,KAAK,SACLN,MAAOd,KAAKgB,MAAMhD,UAClBqD,SAAUrB,KAAKW,aACf/B,UAAU,aAEZ,2BAAOA,UAAU,SAAS0C,QAAQ,QAAlC,eAEF,yBAAK1C,UAAU,UACb,2BACEsC,YAAY,YACZC,GAAG,WACHN,KAAK,WACLO,KAAK,SACLN,MAAOd,KAAKgB,MAAM9C,SAClBmD,SAAUrB,KAAKW,aACf/B,UAAU,aAEZ,2BAAOA,UAAU,SAAS0C,QAAQ,QAAlC,cAEF,yBAAK1C,UAAU,UACb,2BACEsC,YAAY,aACZC,GAAG,YACHN,KAAK,YACLO,KAAK,SACLN,MAAOd,KAAKgB,MAAM5C,UAClBiD,SAAUrB,KAAKW,aACf/B,UAAU,aAEZ,2BAAOA,UAAU,SAAS0C,QAAQ,QAAlC,gBAIJ,yBAAK1C,UAAU,OACb,yBAAKA,UAAU,UACb,2BACEsC,YAAY,aACZC,GAAG,YACHN,KAAK,YACLO,KAAK,SACLN,MAAOd,KAAKgB,MAAM/C,UAClBoD,SAAUrB,KAAKW,aACf/B,UAAU,aAEZ,2BAAOA,UAAU,SAAS0C,QAAQ,QAAlC,eAEF,yBAAK1C,UAAU,UACb,2BACEsC,YAAY,YACZC,GAAG,WACHN,KAAK,WACLO,KAAK,SACLN,MAAOd,KAAKgB,MAAM7C,SAClBkD,SAAUrB,KAAKW,aACf/B,UAAU,aAEZ,2BAAOA,UAAU,SAAS0C,QAAQ,QAAlC,cAEF,yBAAK1C,UAAU,UACb,2BACEsC,YAAY,aACZC,GAAG,YACHN,KAAK,YACLO,KAAK,SACLN,MAAOd,KAAKgB,MAAM3C,UAClBgD,SAAUrB,KAAKW,aACf/B,UAAU,aAEZ,2BAAOA,UAAU,SAAS0C,QAAQ,QAAlC,iBAKN,4BACE1C,UAAU,+BACVwC,KAAK,SACLP,KAAK,UAHP,YAME,uBAAGjC,UAAU,wBAAb,WAILoB,KAAKgB,MAAMN,YAAc,yBAAK9B,UAAU,eACvC,kBAAC,EAAD,CAAQhB,QAASoC,KAAKgB,c,GA/LEf,aCFnB,SAASuB,IACtB,OACE,6BACE,yBAAKC,MAAM,oBACT,uBAAGC,KAAK,IAAID,MAAM,qBAAlB,UCOOE,MATf,WACE,OACE,yBAAK/C,UAAU,OACb,kBAAC4C,EAAD,MACD,kBAAC,EAAD,QCIeI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9D,QAAQ8D,MAAMA,EAAMC,a","file":"static/js/main.2a0cf234.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\n\nfunction randomNumber(min, max) {\n    return Math.random() * (max - min) + min;\n}\n\nconst color =[\"pink lighten-4\", \"yellow accent-2\"];\n\nfunction colorSelection(index){\n    if(index>=0 && index<=5)\n        return \"blue lighten-4\";\n        debugger;\n    var num = parseInt((index - 6)/9);\n    if(num%2 == 0)\n        return  color[0];\n    else\n        return color[1];\n}\n\nexport default class Result extends Component {\n  calculateResult = () => {\n    const {\n      amount,\n      days,\n      mateWater,\n      minLength,\n      maxLength,\n      minWidth,\n      maxWidth,\n      minHeight,\n      maxHeight,\n    } = this.props.rawData;\n\n    let constants = {\n        perDayWage: 190,\n        rate: 118.62,\n    };\n   \n    constants['mwQuantity'] = Math.round(amount/(days * constants.perDayWage * 50));\n\n    let renderBody = [];\n    renderBody.push(\n        <div className=\"row no-bottom-margin grey darken-4 white-text\">\n            <div className=\"col border s1\">No</div>\n            <div className=\"col border s2\">Length</div>\n            <div className=\"col border s2\">Width</div>\n            <div className=\"col border s2\">Height</div>\n            <div className=\"col border s2\">Result</div>\n            <div className=\"col border s3\">Cumulative</div>\n        </div>\n    )\n\n    var mateVal = Math.round(constants.mwQuantity * constants.perDayWage * days);\n    // var mateVal = mate * constants.perDayWage * days;\n    console.log(\"mateVal\", mateVal);\n\n    var waterVal = mateVal;\n    console.log(\"waterVal\", waterVal);\n  \n    var excavation;\n    if(mateWater === \"true\"){\n        excavation = amount - 2 * mateVal;\n        console.log(\"excavation\", excavation);\n    }else{\n        excavation = amount;\n        console.log(\"excavation\", excavation);\n    }\n  \n    var quantity = parseFloat(excavation / constants.rate).toFixed(2);\n    console.log(\"quantity\", quantity);\n  \n    let resultsTotal = 0;\n    let sum = 0, count = 0;\n    while (sum <= quantity) {\n      var length = randomNumber(minLength, maxLength).toFixed(1);\n      var width = randomNumber(minWidth, maxWidth).toFixed(1);\n      var height = randomNumber(minHeight, maxHeight).toFixed(2);\n      var result = parseFloat(length * width * height).toFixed(2);\n      result = parseFloat(result);\n      var oldSum = sum;\n      sum += result;\n      sum = parseFloat(parseFloat(sum).toFixed(2));\n     \n      \n      if (sum <= quantity) {\n         \n          renderBody.push(\n            <div className={`row no-bottom-margin ${colorSelection(count)}`}>\n                <div className=\"col border s1\">1</div>\n                <div className=\"col border s2\">{String(length)}</div>\n                <div className=\"col border s2\">{String(width)}</div>\n                <div className=\"col border s2\">{String(height)}</div>\n                <div className=\"col border s2\">{String(result)}</div>\n                <div className=\"col border s3\">{String(sum)}</div>\n            </div>\n            )\n        console.log(\n          \"1 * \" +\n            length +\n            \" * \" +\n            width +\n            \" * \" +\n            height +\n            \" = \" +\n            result +\n            \"     \" +\n            sum\n        );\n        resultsTotal += parseFloat(result);\n      } else {\n        var remainderVal = quantity - oldSum;\n        remainderVal = parseFloat(parseFloat(remainderVal).toFixed(2));\n        length = randomNumber(minLength, maxLength).toFixed(1);\n        height = randomNumber(minHeight, maxHeight).toFixed(2);\n  \n        width = remainderVal / (length * height);\n  \n        result = parseFloat(length * width * height);\n  \n        console.log(\"remainderVal\", remainderVal);\n        renderBody.push(\n            <div className={`row no-bottom-margin ${colorSelection(count)}`}>\n                <div className=\"col border s1\">1</div>\n                <div className=\"col border s2\">{String(length)}</div>\n                <div className=\"col border s2\">{String(width.toFixed(2))}</div>\n                <div className=\"col border s2\">{String(height)}</div>\n                <div className=\"col border s2\">{String(result.toFixed(2))}</div>\n                <div className=\"col border s3\">{String(quantity)}</div>\n            </div>\n            )\n        console.log(\n          \"1 * \" +\n            length +\n            \" * \" +\n            width.toFixed(2) +\n            \" * \" +\n            height +\n            \" = \" +\n            result.toFixed(2) +\n            \"     \" +\n            quantity\n        );\n        resultsTotal += parseFloat(result);\n      }\n      count += 1;\n    }\n\n    renderBody.push(\n        <div className=\"row no-bottom-margin lime accent-3\">\n            <div className=\"col border s7\">Total Quantity</div>\n            <div className=\"col border s2\">{String(resultsTotal.toFixed(2))}</div>\n            <div className=\"col border s3\">{String(resultsTotal.toFixed(2))}</div>\n        </div>\n    )\n    renderBody.push(\n        <div className=\"row no-bottom-margin lime accent-3\">\n            <div className=\"col border s9\">@rate</div>\n            <div className=\"col border s3\">{constants.rate}</div>\n        </div>\n    )\n    renderBody.push(\n        <div className=\"row no-bottom-margin lime accent-3\">\n            <div className=\"col border s9\">Excavation Amount</div>\n            <div className=\"col border s3\">{excavation}</div>\n        </div>\n    )\n    mateWater=== \"true\" && renderBody.push(\n        <div className=\"row no-bottom-margin  blue lighten-3\">\n            <div className=\"col border s9\">Mate Amount</div>\n            <div className=\"col border s3\">{mateVal}</div>\n        </div>\n    )\n    mateWater=== \"true\" && renderBody.push(\n        <div className=\"row no-bottom-margin  blue lighten-3\">\n            <div className=\"col border s9\">Water Amount</div>\n            <div className=\"col border s3\">{mateVal}</div>\n        </div>\n    )\n    \n    renderBody.push(\n        <Fragment>\n        <div className=\"row no-bottom-margin\"></div>\n        <div className=\"row no-bottom-margin orange lighten-2\">\n            <div className=\"col border s9\">Total Amount</div>\n            <div className=\"col border s3\">{excavation+(2*mateVal)}</div>\n        </div>\n        </Fragment>\n    )\n    renderBody.push(\n        <Fragment>\n        <div className=\"row no-bottom-margin\"></div>\n        <div className=\"row no-bottom-margin\">\n            <div className=\"col border s9\">Total Iterations</div>\n            <div className=\"col border s3\">{count}</div>\n        </div>\n        </Fragment>\n    )\n   \n    return (\n        <div>\n            {renderBody}\n        </div>\n    )\n  };\n\n  render() {\n    return (\n        <div>\n            {this.calculateResult()}\n        </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport Result from \"./Result\";\n\nexport default class AKKI extends Component {\n  constructor() {\n    super();\n    this.state = {\n      amount : 40000,\n      days: 6,\n      mateWater: \"true\",\n      minLength: 12,\n      maxLength: 17,\n      minWidth: 12,\n      maxWidth: 17,\n      minHeight: 0.10,\n      maxHeight: 0.18,\n      showResult: false\n    };\n  }\n  componentDidMount = () => {\n    M.AutoInit();\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.setState({\n      showResult: true\n    })\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: parseFloat(e.target.value),\n    });\n  };\n\n  handleRadio = (e) => {\n    this.setState({\n      mateWater: e.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"akki\">\n        <div className=\"row section container\">\n          <form className=\"col s12\" onSubmit={this.handleSubmit}>\n            <div className=\"input-field col s12\">\n              <input\n                placeholder=\"Amount\"\n                id=\"amount\"\n                name=\"amount\"\n                type=\"number\"\n                value={this.state.amount}\n                onChange={this.handleChange}\n                className=\"validate\"\n              />\n              <label className=\"active\" htmlFor=\"amount\">Amount</label>\n            </div>\n\n            <div className=\"col left s9\">\n              <h6>Weather to Calculate Mate/Water</h6>\n            </div>\n            <div className=\"input-field col s3\">\n              <span>\n                <label>\n                  <input name=\"group1\" className=\"with-gap\" type=\"radio\" value={true} onChange={this.handleRadio} checked={this.state.mateWater === \"true\"}/>\n                  <span>Yes</span>\n                </label>\n              </span> \n              <span>\n                <label>\n                  <input name=\"group1\" className=\"with-gap\" type=\"radio\" value={false} onChange={this.handleRadio} checked={this.state.mateWater === \"false\"}/>\n                  <span>No</span>\n                </label>\n              </span>\n            </div>\n\n            {this.state.mateWater===\"true\" ? (\n              <div className=\"input-field col s12\">\n                <input\n                  placeholder=\"No of Days\"\n                  id=\"days\"\n                  name=\"days\"\n                  type=\"number\"\n                  value={this.state.days}\n                  onChange={this.handleChange}\n                  className=\"validate\"\n                  min={1}\n                />\n                <label className=\"active\" htmlFor=\"days\">No of Days</label>\n              </div>\n            ):null}\n\n            <div className=\"minmaxContainer\">\n              <div className=\"row\">\n                <div className=\"col left s12\">\n                  <h5>Enter Limit</h5>\n                </div>\n                <div className=\"col s4\">Length</div>\n                <div className=\"col s4\">Width</div>\n                <div className=\"col s4\">Height</div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col s4\">\n                  <input\n                    placeholder=\"Min Length\"\n                    id=\"minLength\"\n                    name=\"minLength\"\n                    type=\"number\"\n                    value={this.state.minLength}\n                    onChange={this.handleChange}\n                    className=\"validate\"\n                  />\n                  <label className=\"active\" htmlFor=\"days\">Min Length</label>\n                </div>\n                <div className=\"col s4\">\n                  <input\n                    placeholder=\"Min Width\"\n                    id=\"minWidth\"\n                    name=\"minWidth\"\n                    type=\"number\"\n                    value={this.state.minWidth}\n                    onChange={this.handleChange}\n                    className=\"validate\"\n                  />\n                  <label className=\"active\" htmlFor=\"days\">Min Width</label>\n                </div>\n                <div className=\"col s4\">\n                  <input\n                    placeholder=\"Min Height\"\n                    id=\"minHeight\"\n                    name=\"minHeight\"\n                    type=\"number\"\n                    value={this.state.minHeight}\n                    onChange={this.handleChange}\n                    className=\"validate\"\n                  />\n                  <label className=\"active\" htmlFor=\"days\">Min Height</label>\n                </div>\n              </div>\n            \n              <div className=\"row\">\n                <div className=\"col s4\">\n                  <input\n                    placeholder=\"Max Length\"\n                    id=\"maxLength\"\n                    name=\"maxLength\"\n                    type=\"number\"\n                    value={this.state.maxLength}\n                    onChange={this.handleChange}\n                    className=\"validate\"\n                  />\n                  <label className=\"active\" htmlFor=\"days\">Max Length</label>\n                </div>\n                <div className=\"col s4\">\n                  <input\n                    placeholder=\"Max Width\"\n                    id=\"maxWidth\"\n                    name=\"maxWidth\"\n                    type=\"number\"\n                    value={this.state.maxWidth}\n                    onChange={this.handleChange}\n                    className=\"validate\"\n                  />\n                  <label className=\"active\" htmlFor=\"days\">Max Width</label>\n                </div>\n                <div className=\"col s4\">\n                  <input\n                    placeholder=\"Max Height\"\n                    id=\"maxHeight\"\n                    name=\"maxHeight\"\n                    type=\"number\"\n                    value={this.state.maxHeight}\n                    onChange={this.handleChange}\n                    className=\"validate\"\n                  />\n                  <label className=\"active\" htmlFor=\"days\">Max Height</label>\n                </div>\n              </div>\n            </div>\n\n            <button\n              className=\"btn waves-effect waves-light\"\n              type=\"submit\"\n              name=\"action\"\n            >\n              Calculate\n              <i className=\"material-icons right\">send</i>\n            </button>\n          </form>\n        </div>\n        {this.state.showResult && <div className=\"row section\">\n          <Result rawData={this.state}/>\n        </div>}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default function NavBar() {\n  return (\n    <nav>\n      <div class=\"nav-wrapper teal\">\n        <a href=\"#\" class=\"brand-logo center\">\n          Akki\n        </a>\n      </div>\n    </nav>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport Akki from './component/Akki'\nimport NavBar from './component/NavBar';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n     <Akki />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}